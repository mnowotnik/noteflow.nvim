*noteflow*

==============================================================================
COMMANDS                                            *noteflow-commands*

								  *:NoteflowDaily*
:NoteflowDaily~
Create a new daily note. The title is generated from a current date using
template 'YYYY-MM-DD'. The note's filename is 'YYYY-MM-DD.md'.
You can modify the way note's filename is generated by defining
'make_daily_slug' hook. The hook has signature:

>
  @param title a note's title
  @return basename of the note's filename
  function(title: string) -> string
<

								  *:NoteflowEditTags*
:NoteflowEditTags~
Quickly edit tags for the current note using Telescope dialog.
Press <space> to toggle tag and <C-t> to add a new one.

								  *:NoteflowFind*
:NoteflowFind~
Open Telescope dialog to browse through notes. Notes are filtered by
fuzzy-matched title and tags from prompt. Tags are words that start with
'#' character. Example: `#noteflow`. Tag omnicompletion works in the prompt
so you can simply enter '#' and press <C-x><C-o>.

								  *:NoteflowFollowWikilink*
:NoteflowFollowWikilink~
Jump to the note referenced by wikilink under cursor.

								  *:NoteflowGrep*
:NoteflowGrep~
Live grep through notes.

								  *:NoteflowInsertWikilink*
:NoteflowInsertWikilink~
Opens Telescope dialog that you can use to select wikilink target. Selected
note title is then pasted as a wikilink using word under cursor as a label.
For example: `[[My note title|label]]`

								  *:NoteflowNew*
:NoteflowNew {title}~
Opens, optionally, two search dialogs that you can use to select a template
and a target directory for the new note. After that, the note file is created
and opened in a new buffer.

								  *:NoteflowPreview*
:NoteflowPreview~
Opens browser with your markdown note rendered as a html document that updates as you type.

								  *:NoteflowRename*
:NoteflowRename {new title}~
Changes the title of a current note and all of its references in other notes
as well.

								  *:NoteflowStagedGrep*
:NoteflowStagedGrep~
Opens search dialog that allows you to perform initial filtering of results
via grep and then fuzzy match the output.
Fuzzy matching is activated after the `|>` delimiter.
For example: `foo|>bar`

vim:tw=78:ts=8:expandtab:noet:ft=help:norl:
